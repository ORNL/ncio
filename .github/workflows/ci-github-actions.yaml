
name: GitHub Actions

on: 
  push: 
    branches: 
    - master 
  pull_request: 
    branches: 
    - master 

jobs:

  linux:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
      GH_OS: Linux
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          ubuntu18-gcc8,
          ubuntu18-clang6,
          centos7-gcc8,
          centos7-clang5
        ]
        include:
        - jobname: ubuntu18-gcc8
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
        - jobname: ubuntu18-clang6
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
        - jobname: centos7-gcc8
          container: 
            image: williamfgc/ncio-ci:centos7-gcc8-clang5
            options: -u root
        - jobname: centos7-clang5
          container: 
            image: williamfgc/ncio-ci:centos7-gcc8-clang5
            options: -u root

    steps:
    - name: Checkout Action
      uses: actions/checkout@v1

    - name: Configure
      run: scripts/ci/github-actions/bash/run_step.sh configure

    - name: Build
      run: scripts/ci/github-actions/bash/run_step.sh build

    - name: Test
      run: scripts/ci/github-actions/bash/run_step.sh test

    - name: Install
      run: scripts/ci/github-actions/bash/run_step.sh install


  macos:
    runs-on: macos-latest
    env:
      GH_YML_JOBNAME: ${{ matrix.jobname }}
      GH_YML_OS: macOS

    strategy:
      fail-fast: false
      matrix:
        jobname: [
          macos1015-xcode11 
        ]

    steps:
    - name: Checkout Action
      uses: actions/checkout@v1

    - name: Setup Dependencies
      run: scripts/ci/github-actions/bash/setup_macos.sh

    - name: Configure
      run: scripts/ci/github-actions/bash/run_step.sh configure

    - name: Build
      run: scripts/ci/github-actions/bash/run_step.sh build

    - name: Test
      run: scripts/ci/github-actions/bash/run_step.sh test

    - name: Install
      run: scripts/ci/github-actions/bash/run_step.sh install


  windows:
    runs-on: windows-2019
    env:
      GH_YML_JOBNAME: ${{ matrix.jobname }}
      GH_YML_OS: windows

    strategy:
      fail-fast: false
      matrix:
        jobname: [
          windows-vs2019
        ]

    steps:
    - name: Checkout Action
      uses: actions/checkout@v1
    
    - name: Setup Dependencies
      run: scripts/ci/github-actions/powershell/setup_windows.ps1
      
    - name: Set MSVC Compiler
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure
      run: scripts/ci/github-actions/powershell/run_step.ps1 -step configure

    - name: Build
      run: scripts/ci/github-actions/powershell/run_step.ps1 -step build

    - name: Test
      run: scripts/ci/github-actions/powershell/run_step.ps1 -step test

    - name: Install
      run: scripts/ci/github-actions/powershell/run_step.ps1 -step install


  dynamic:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          clang-asan, # address sanitizer
          clang-ubsan, # undefined behavior sanitizer
          clang-tsan,  # thread race sanitizer (expensive)
          clang-msan,  # unintialize memory sanitizer (expensive)
          coverage
        ]
        include:
        - jobname: clang-asan
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root

        - jobname: clang-ubsan
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root

        - jobname: clang-tsan
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root

        - jobname: clang-msan
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
        
        - jobname: coverage
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
    
    steps:
    - name: Checkout Action
      uses: actions/checkout@v1
    
    - name: Configure
      run: scripts/ci/github-actions/bash/run_step.sh configure

    - name: Build
      run: scripts/ci/github-actions/bash/run_step.sh build

    - name: Test
      run: scripts/ci/github-actions/bash/run_step.sh test
    
    - name: Coverage
      if: contains(matrix.jobname, 'coverage')
      run: scripts/ci/github-actions/bash/run_step.sh coverage
    
    - name: Upload Coverage
      if: contains(matrix.jobname, 'coverage')
      uses: codecov/codecov-action@v1
      with:
        file:  ../ncio-build/meson-logs/coverage.xml
        flags: alltests # optional
        name: codecov-ncio # optional
        fail_ci_if_error: true # optional (default = false)

  static:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          clang-format
        ]
    
    steps:
    - name: Checkout Action
      uses: actions/checkout@v1
    
    - name: clang-format
      if: contains(matrix.jobname, 'clang-format')
      run: scripts/ci/github-actions/bash/check_clang-format.sh
      