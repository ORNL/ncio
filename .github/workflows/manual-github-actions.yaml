
name: GitHub Actions manual CI

on:
  pull_request:
    types: [opened]
    
  issue_comment:
    types: [created]
  
jobs:

  linux_pr_comment:
    if: | 
        github.repository_owner == 'ORNL' &&
        github.actor == 'williamfgc' &&
        contains(github.event.comment.body, 'Test this please') &&
        github.event.issue.pull_request

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
      GH_OS: Linux
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          ubuntu18-gcc8
        ]
        include:
        - jobname: ubuntu18-gcc8
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
       
    steps:
    
    - name: Create comment
      if: steps.check.outputs.triggered == 'true'
      env:
        URL: ${{ github.event.issue.comments_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":test_tube: [starting ci integration job]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"')" }'
    
    - name: Github API Request
      if: steps.check.outputs.triggered == 'true'
      id: request
      uses: octokit/request-action@v2.0.0
      with:
        route: ${{ github.event.issue.pull_request.url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Get PR informations
      if: steps.check.outputs.triggered == 'true'
      id: pr_data
      run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).head.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).head.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).head.repo.ssh_url }}"
          
    - name: Checkout PR Branch
      if: steps.check.outputs.triggered == 'true'
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ fromJson(steps.request.outputs.data).head.repo.full_name }}
        ref: ${{ steps.pr_data.outputs.branch }}
        
    - name: Configure
      run: scripts/ci/github-actions/bash/run_step.sh configure

    - name: Build
      run: scripts/ci/github-actions/bash/run_step.sh build

    - name: Test
      run: scripts/ci/github-actions/bash/run_step.sh test

    - name: Install
      run: scripts/ci/github-actions/bash/run_step.sh install
