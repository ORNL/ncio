
name: GitHub Actions manual CI

on:
  issue_comment:
    types: [created]
  
  push:
    branches: 
    - main
  
jobs:

  linux_pr_comment:
    # only run on pull request comments and merge
    if: | 
        github.repository_owner == 'ORNL' &&
        github.actor == 'williamfgc' &&
        ( ( github.event.issue.pull_request && 
            contains(github.event.comment.body, 'Test this please') ) ||
          github.event_name == 'push' )

    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    env:
      GH_JOBNAME: ${{ matrix.jobname }}
      GH_OS: Linux
    strategy:
      fail-fast: false
      matrix:
        jobname: [
          ubuntu18-gcc8
        ]
        include:
        - jobname: ubuntu18-gcc8
          container: 
            image: williamfgc/ncio-ci:ubuntu18-gcc8-clang6
            options: -u root
       
    steps:
    - name: PR info
      run:  |
            echo -e "Comment on PR #${{ github.event.issue.number }}\n" \
            echo -e "Comment: ${{ github.event.comment.body }}\n" \
            echo -e "GitHub actor: ${{ github.actor }}\n" \
            echo -e "Event name: ${{ github.event_name }}\n"
 
    - name: GitHub API Request
      if: steps.check.outputs.triggered == 'true'
      id: request
      uses: octokit/request-action@v2.0.0
      with:
        route: ${{ github.event.issue.pull_request.url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get PR informations
      if: steps.check.outputs.triggered == 'true'
      id: pr_data
      run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
    
    - name: Checkout Action
      if: steps.check.outputs.triggered == 'true'
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ steps.pr_data.outputs.branch }}
        
    - name: Save comment in file
      if: steps.check.outputs.triggered == 'true'
      run: echo ${{ github.event.comment.body }} > comments/$(date +"%s").txt

    - name: Configure
      run: scripts/ci/github-actions/bash/run_step.sh configure

    - name: Build
      run: scripts/ci/github-actions/bash/run_step.sh build

    - name: Test
      run: scripts/ci/github-actions/bash/run_step.sh test

    - name: Install
      run: scripts/ci/github-actions/bash/run_step.sh install
